1.用递归自顶向下解决问题
2.用自底向上的方法,base case是
如果一家都不抢那么金额就是0;

从最后面的房子往前推
状态转移方程式:
如果这一家抢: 最大金额 = 这一家+下下家开始能抢到的最大金额(因为下家不能抢)
如果这家不抢: 最大金额 = 下一家开始能抢到的最大金额.

3.如果是环形的,那么分解成2种情况:不能抢第一家,或者不能抢最后一家,然后对比两种情况,取较大的那个

4.如果是二叉树的,如果抢了一个节点,那么它的两个子节点就不能抢了,只能抢它的子子节点,如果不抢,那么就能抢它的子节点.
这种情况用递归+备忘录比较好理解.
